@model Consumer.Models.Assignment

@{
    ViewBag.Title = Model.Name;
}

<hgroup class="title">
    <h1>@ViewBag.Title.</h1>
    <h2>Review assignment details.</h2>
</hgroup>

<fieldset>
    <legend>Assignment</legend>

    <ol>
        <li>
            @Html.LabelFor(model => model.Name)
            @Model.Name
        </li>
        @if (!string.IsNullOrEmpty(Model.Description))
        {
        <li>
            @Html.LabelFor(model => model.Description)
            @Html.Raw(Model.Description)
        </li>
        }
        <li>
            @Html.LabelFor(model => model.Url)
            @Html.DisplayFor(model => model.Url)
        </li>
        @if (!string.IsNullOrEmpty(Model.ConsumerKey))
        {
        <li>
            @Html.LabelFor(model => model.ConsumerKey)
            @Html.DisplayFor(model => model.ConsumerKey)
        </li>
        }
        @if (!string.IsNullOrEmpty(Model.ConsumerSecret))
        {
        <li>
            @Html.LabelFor(model => model.ConsumerSecret)
            @Html.DisplayFor(model => model.ConsumerSecret )
        </li>
        }
        @if (!string.IsNullOrEmpty(Model.CustomParameters))
        {
        <li>
            @Html.LabelFor(model => model.CustomParameters)
            <pre>
@Html.DisplayFor(model => model.CustomParameters)
            </pre>
        </li>
        }
    </ol>
</fieldset>

<p>
    @Html.ActionLink("Launch", "Launch", new { id=Model.AssignmentId }, new { @class = "button", target="_blank" })
    @Html.ActionLink("Edit", "Edit", new { id=Model.AssignmentId }, new { @class = "button" })
    @Html.ActionLink("Back to Course", "Details", "Course", new { id = Model.Course.CourseId }, new { @class = "button" })
</p>
