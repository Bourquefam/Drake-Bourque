@model Consumer.Models.Course

@{
    ViewBag.Title = Model.Title;
}

<hgroup class="title">
    <h1>@ViewBag.Title.</h1>
    <h2>Course details.</h2>
</hgroup>

@if (!string.IsNullOrEmpty(Model.inBloomSectionId))
{
    <div>
        This course was imported from an inBloom course section.
    </div>
}

<table>
    <tr>
        <td style="vertical-align:top">
            <h3>Instructor</h3>
            <ul>
                <li>
                    @Model.Instructor.FullName
                </li>
            </ul>
        </td>
        @if (Model.State != null)
        {
            <td>
                <h3>Location</h3>
                <ul>
                    <li>State: @Model.State.Name</li>
                    @if (Model.District != null)
                    {
                        <li>District: @Model.District.Name</li>
                    }
                    @if (Model.School != null)
                    {
                        <li>School: @Model.School.Name</li>
                    }
                </ul>
            </td>
        }
        <td>
            <h3>Enrollment</h3>
            
            @Html.Action("Enroll", new { courseId = Model.CourseId })
        </td>
    </tr>
</table>
<div id="accordian">
    <h3>Assignments</h3>
    <div>
        @if (Model.Assignments.Count() == 0)
        {
            <text>There are no assignments yet.</text>
        }
        else
        {
            <table>
                <tr>
                    <td><strong>Assignment</strong></td>
                    <td><strong>Provider</strong></td>
                    @if (Model.EnrolledUsers.Count(u => u.UserId == WebSecurity.CurrentUserId) > 0)
                    {
                        <td><strong>Your Score</strong></td>
                    }
                    <td></td>
                </tr>

                @foreach (var assignment in Model.Assignments)
                {
                    @Html.Action("CourseAssignment", new { id = assignment.AssignmentId })
                }

            </table>
        }
        @if (Roles.IsUserInRole(Consumer.Models.UserRoles.TeacherRole) && Model.Instructor.UserId == WebSecurity.CurrentUserId)
        {
            <p>
                @Html.ActionLink("Create Assignment", "Create", "Assignment", new { Model.CourseId }, new { @class = "button" })
            </p>
        }
    </div>
    @if (Roles.IsUserInRole(Consumer.Models.UserRoles.TeacherRole) && Model.Instructor.UserId == WebSecurity.CurrentUserId)
    {
        <h3>Gradebook</h3>
        <div>
            @Html.Action("CourseGradebook", new { id = Model.CourseId })
        </div>
    }
</div>

<p>
    @if (Roles.IsUserInRole(Consumer.Models.UserRoles.TeacherRole) && Model.Instructor.UserId == WebSecurity.CurrentUserId)
    {
        @Html.ActionLink("Edit", "Edit", new { id = Model.CourseId }, new { @class = "button" })
        @Html.ActionLink("Delete", "Delete", new { id = Model.CourseId }, new { @class = "button" })
    }
    @Html.ActionLink("Back to Courses", "Index", routeValues: null, htmlAttributes: new { @class = "button" })
</p>

@section Scripts {
    @Scripts.Render("~/Scripts/jquery.qtip-1.0.0-rc3.min.js")
    <script>
        $(function () {
            // Divide the form into sections using jQuery UI Accordian
            $("#accordian").accordion({
                heightStyle: "content"
            });
            // Display title attribute nicely
            $("a[title],img[title],span[title]").qtip({
                style: {
                    border: {
                        width: 3,
                        radius: 6
                    },
                    padding: 10,
                    tip: true,
                    name: "dark"
                }
            });
        });
    </script>
}


