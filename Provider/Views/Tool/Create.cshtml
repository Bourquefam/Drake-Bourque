@model Provider.Models.Tool

@{
    ViewBag.Title = "Create Tool";
}

<hgroup class="title">
    <h1>@ViewBag.Title.</h1>
    <h2>Create new tool or content.</h2>
</hgroup>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Tool</legend>

        <ol>
            <li>
                @Html.LabelFor(model => model.Name)
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </li>
            <li>
                @Html.LabelFor(model => model.Description)
                @Html.TextAreaFor(model => model.Description, new { @class = "tinymce" })
                @Html.ValidationMessageFor(model => model.Description)
            </li>
            <li>
                @Html.LabelFor(model => model.Content)
                @Html.TextAreaFor(model => model.Content, new { @class = "tinymce" })
                @Html.ValidationMessageFor(model => model.Content)
            </li>
       </ol>
    </fieldset>

    <div>
        <input type="submit" value="Create" />
        @Html.ActionLink("Back to List", "Index", routeValues: null, htmlAttributes: new { @class = "button" })
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/tiny_mce/jquery.tinymce.js")
    <script>
        $(function () {
            $(".tinymce").tinymce({
                script_url: "../../Scripts/tiny_mce/tiny_mce.js",
                theme: "simple",
                content_css: "../../Content/tiny_mce.css"
            });
        });
    </script>
}
